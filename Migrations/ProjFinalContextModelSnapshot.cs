// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinal.Models;

namespace ProjetoFinal.Migrations
{
    [DbContext(typeof(ProjFinalContext))]
    partial class ProjFinalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("ProjetoFinal.Models.AnaliseQualidade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("aprovado");

                    b.Property<DateTime>("data");

                    b.Property<int?>("ordemID");

                    b.Property<string>("responsavel");

                    b.HasKey("ID");

                    b.HasIndex("ordemID");

                    b.ToTable("AnaliseQualidade");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("endereco");

                    b.Property<string>("nome");

                    b.Property<string>("telefone");

                    b.HasKey("ID");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Embalagem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("fornecedorID");

                    b.Property<string>("nome");

                    b.Property<int?>("produtoID");

                    b.Property<decimal>("tamanho");

                    b.HasKey("ID");

                    b.HasIndex("fornecedorID");

                    b.HasIndex("produtoID");

                    b.ToTable("Embalagem");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Fornecedor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("endereco");

                    b.Property<string>("nome");

                    b.Property<string>("telefone");

                    b.HasKey("ID");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Ordem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("clienteID");

                    b.Property<DateTime>("data");

                    b.Property<TimeSpan>("hora");

                    b.Property<int?>("produtoID");

                    b.Property<int>("qdte");

                    b.HasKey("ID");

                    b.HasIndex("clienteID");

                    b.HasIndex("produtoID");

                    b.ToTable("Ordem");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nome");

                    b.HasKey("ID");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ProjetoFinal.Models.AnaliseQualidade", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Ordem", "ordem")
                        .WithMany()
                        .HasForeignKey("ordemID");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Embalagem", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Fornecedor", "fornecedor")
                        .WithMany()
                        .HasForeignKey("fornecedorID");

                    b.HasOne("ProjetoFinal.Models.Produto", "produto")
                        .WithMany()
                        .HasForeignKey("produtoID");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Ordem", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteID");

                    b.HasOne("ProjetoFinal.Models.Produto", "produto")
                        .WithMany()
                        .HasForeignKey("produtoID");
                });
#pragma warning restore 612, 618
        }
    }
}
